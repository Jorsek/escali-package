<?xml version="1.0" encoding="UTF-8"?>
<!--  
    Copyright (c) 2016 Nico Kutscherauer
        
    This file is part of Escali Schematron.
    
    Escali Schematron is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    Escali Schematron is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    
    You should have received a copy of the GNU General Public License
    along with Escali Schematron.  If not, see http://www.gnu.org/licenses/gpl-3.0.
    
    -->
<grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes" ns="http://www.schematron-quickfix.com/validator/process" xmlns:sqf="http://www.schematron-quickfix.com/validator/process">

    <include href="iso-schematron.rng">
        <define name="foreign-element">
            <interleave>
                <zeroOrMore>
                    <element>
                        <anyName>
                            <except>
                                <nsName ns="http://purl.oclc.org/dsdl/schematron"/>
                                <nsName/>
                            </except>
                        </anyName>
                        <zeroOrMore>
                            <choice>
                                <attribute>
                                    <anyName/>
                                </attribute>
                                <ref name="foreign-element"/>
                                <ref name="schema"/>
                                <text/>
                            </choice>
                        </zeroOrMore>
                    </element>
                </zeroOrMore>
                <zeroOrMore>
                    <ref name="fix"/>
                </zeroOrMore>
                <zeroOrMore>
                    <ref name="fixes"/>
                </zeroOrMore>
                <zeroOrMore>
                    <ref name="group"/>
                </zeroOrMore>
            </interleave>
        </define>
    </include>

    <define name="xml_lang">
        <optional>
            <attribute name="xml:lang">
                <data type="language"/>
            </attribute>
        </optional>
    </define>

    <define name="messageAttributes">
        <optional>
            <attribute name="sqf:fix">
                <data type="string"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="sqf:default-fix">
                <data type="string"/>
            </attribute>
        </optional>
    </define>

    <define name="rootAttributes">
        <optional>
            <attribute name="version">
                <data type="token"/>
            </attribute>
        </optional>
    </define>

    <define name="parameterAttributes">
        <attribute name="name">
            <data type="string"/>
        </attribute>
        <optional>
            <attribute name="default">
                <data type="string"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="type">
                <data type="string"/>
            </attribute>
        </optional>
    </define>

    <define name="templateElements">
        <zeroOrMore>
            <choice>
                <zeroOrMore>
                    <element>
                        <anyName>
                            <except>
                                <nsName ns="http://purl.oclc.org/dsdl/schematron"/>
                                <nsName/>
                            </except>
                        </anyName>
                        <zeroOrMore>
                            <choice>
                                <attribute>
                                    <anyName/>
                                </attribute>
                                <ref name="templateElements"/>
                                <text/>
                            </choice>
                        </zeroOrMore>
                    </element>
                </zeroOrMore>
                <zeroOrMore>
                    <ref name="keep"/>
                </zeroOrMore>
                <zeroOrMore>
                    <ref name="copy-of"/>
                </zeroOrMore>
                <zeroOrMore>
                    <ref name="let"/>
                </zeroOrMore>
                <zeroOrMore>
                    <ref name="value-of"/>
                </zeroOrMore>
                <zeroOrMore>
                    <ref name="name"/>
                </zeroOrMore>
                <text/>
            </choice>
        </zeroOrMore>
    </define>

    <define name="activityElements">
        <zeroOrMore>
            <ref name="add"/>
        </zeroOrMore>
        <zeroOrMore>
            <ref name="delete"/>
        </zeroOrMore>
        <zeroOrMore>
            <ref name="replace"/>
        </zeroOrMore>
        <zeroOrMore>
            <ref name="stringReplace"/>
        </zeroOrMore>
    </define>

    <define name="fixElements">
        <choice>
            <ref name="fix"/>
            <ref name="group"/>
        </choice>
    </define>

    <define name="fixes">
        <element name="fixes">
            <zeroOrMore>
                <ref name="fixElements"/>
            </zeroOrMore>
            <optional>
                <ref name="xml_lang"/>
                <optional>
                    <attribute name="id">
                        <data type="ID"/>
                    </attribute>
                </optional>
                <ref name="foreign"/>
            </optional>
        </element>
    </define>

    <define name="group">
        <element name="group">
            <zeroOrMore>
                <ref name="fix"/>
            </zeroOrMore>
            <attribute name="id">
                <data type="string"/>
            </attribute>
            <optional>
                <attribute name="use-when" a:defaultValue="true()">
                    <data type="string"/>
                </attribute>
            </optional>
            <ref name="xml_lang"/>
            <ref name="foreign"/>
        </element>
    </define>

    <define name="fix">
        <element name="fix">
            <zeroOrMore>
                <ref name="sqf_param"/>
            </zeroOrMore>
            <zeroOrMore>
                <ref name="foreign-element"/>
            </zeroOrMore>
            <zeroOrMore>
                <ref name="let"/>
            </zeroOrMore>
            <zeroOrMore>
                <ref name="description"/>
            </zeroOrMore>
            <zeroOrMore>
                <ref name="foreign-element"/>
            </zeroOrMore>
            <zeroOrMore>
                <ref name="let"/>
            </zeroOrMore>
            <zeroOrMore>
                <ref name="user-entry"/>
            </zeroOrMore>
            <zeroOrMore>
                <choice>
                    <zeroOrMore>
                        <ref name="foreign-element"/>
                    </zeroOrMore>
                    <zeroOrMore>
                        <ref name="let"/>
                    </zeroOrMore>
                    <zeroOrMore>
                        <ref name="call-fix"/>
                    </zeroOrMore>
                    <zeroOrMore>
                        <ref name="activityElements"/>
                    </zeroOrMore>
                </choice>
            </zeroOrMore>
            <attribute name="id">
                <data type="NCName"/>
            </attribute>
            <optional>
                <attribute name="use-when" a:defaultValue="true()">
                    <data type="string"/>
                </attribute>
            </optional>
            <optional>
                <attribute name="use-for-each" a:defaultValue=".">
                    <data type="string"/>
                </attribute>
            </optional>
            <optional>
                <attribute name="role">
                    <choice>
                        <value>replace</value>
                        <value>add</value>
                        <value>stringReplace</value>
                        <value>delete</value>
                        <value>mix</value>
                    </choice>
                </attribute>
            </optional>
            <ref name="xml_lang"/>
            <ref name="foreign"/>
        </element>
    </define>

    <define name="description">
        <element name="description">
            <ref name="sqf_title"/>
            <zeroOrMore>
                <ref name="sqf_p"/>
            </zeroOrMore>

            <ref name="xml_lang"/>

            <optional>
                <ref name="foreign"/>
            </optional>
        </element>
    </define>

    <define name="user-entry">
        <element name="user-entry">
            <interleave>
                <oneOrMore>
                    <ref name="description"/>
                </oneOrMore>
                <zeroOrMore>
                    <ref name="foreign-element"/>
                </zeroOrMore>
            </interleave>
            <optional>
                <ref name="parameterAttributes"/>
            </optional>

            <ref name="xml_lang"/>
            <ref name="foreign"/>
        </element>
    </define>

    <define name="call-fix">
        <element name="call-fix">

            <zeroOrMore>
                <ref name="with-param"/>
            </zeroOrMore>

            <attribute name="ref">
                <data type="string"/>
            </attribute>
            <optional>
                <ref name="foreign"/>
            </optional>
        </element>
    </define>

    <define name="with-param">
        <element name="with-param">
            <ref name="foreign-element"/>
            <attribute name="name">
                <data type="string"/>
            </attribute>
            <optional>
                <attribute name="select">
                    <data type="string"/>
                </attribute>
            </optional>
            <ref name="foreign"/>
        </element>
    </define>

    <define name="sqf_param">
        <element name="param">
            <!--            <ref name="anycontents"/>-->
            <optional>
                <attribute name="required" a:defaultValue="no">
                    <choice>
                        <value>yes</value>
                        <value>no</value>
                    </choice>
                </attribute>
            </optional>
            <optional>
                <attribute name="abstract" a:defaultValue="false">
                    <data type="boolean"/>
                </attribute>
            </optional>
            <ref name="parameterAttributes"/>
            <ref name="foreign"/>
        </element>
    </define>

    <define name="sqf_title">
        <element name="sqf:title">
            <mixed>
                <zeroOrMore>
                    <choice>
                        <ref name="foreign-element"/>
                        <ref name="name"/>
                        <ref name="value-of"/>
                    </choice>
                </zeroOrMore>
            </mixed>
            <ref name="xml_lang"/>
            <ref name="foreign"/>
        </element>
    </define>

    <define name="sqf_p">
        <element name="sqf:p">
            <mixed>
                <zeroOrMore>
                    <choice>
                        <ref name="foreign-element"/>
                        <ref name="name"/>
                        <ref name="value-of"/>
                        <ref name="emph"/>
                        <ref name="dir"/>
                        <ref name="span"/>
                    </choice>
                </zeroOrMore>
            </mixed>
            <ref name="xml_lang"/>
            <ref name="foreign"/>
        </element>
    </define>

    <define name="replace">
        <element name="replace">
            <ref name="templateElements"/>
            <ref name="activityManipulate"/>
        </element>
    </define>

    <define name="delete">
        <element name="delete">
            <empty/>
            <ref name="activityBase"/>
        </element>
    </define>

    <define name="add">
        <element name="add">
            <ref name="templateElements"/>
            <optional>
                <attribute name="position">

                    <ref name="positionType"/>
                </attribute>
            </optional>
            <ref name="activityManipulate"/>
        </element>
    </define>

    <define name="stringReplace">
        <element name="stringReplace">
            <ref name="templateElements"/>
            <ref name="activityBase"/>
            <attribute name="regex">
                <data type="string"/>
            </attribute>
            <optional>
                <attribute name="select">
                    <data type="string"/>
                </attribute>
            </optional>
            <optional>
                <attribute name="flags">
                    <data type="string"/>
                </attribute>
            </optional>
        </element>
    </define>

    <define name="activityBase">
        <optional>
            <attribute name="match" a:defaultValue=".">
                <data type="string"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="use-when" a:defaultValue="true()">
                <data type="string"/>
            </attribute>
        </optional>
        <optional>
            <ref name="foreign"/>
        </optional>
    </define>

    <define name="activityManipulate">
        <ref name="activityBase"/>
        <optional>
            <attribute name="node-type">
                <ref name="nodeTypeType"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="select">
                <data type="string"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="target">
                <data type="string"/>
            </attribute>
        </optional>
    </define>

    <define name="positionType">
        <choice>
            <value>after</value>
            <value>before</value>
            <value>first-child</value>
            <value>last-child</value>
        </choice>
    </define>

    <define name="nodeTypeType">
        <choice>
            <value>keep</value>
            <value>element</value>
            <value>attribute</value>
            <value>processing-instruction</value>
            <value>pi</value>
            <value>comment</value>
        </choice>
    </define>

    <define name="keep">
        <element name="keep">
            <optional>
                <attribute name="select" a:defaultValue="node()">
                    <data type="string"/>
                </attribute>
            </optional>
        </element>
    </define>

    <define name="copy-of">
        <element name="copy-of">
            <optional>
                <attribute name="select" a:defaultValue="node()">
                    <data type="string"/>
                </attribute>
            </optional>
            <optional>
                <attribute name="unparsed-mode" a:defaultValue="false">
                    <data type="boolean"/>
                </attribute>
            </optional>
        </element>
    </define>







    <define name="anycontents">
        <mixed>
            <zeroOrMore>
                <choice>
                    <attribute>
                        <anyName>
                            <except>
                                <nsName/>
                                <nsName ns=""/>
                            </except>
                        </anyName>
                    </attribute>
                    <ref name="any"/>
                </choice>
            </zeroOrMore>
        </mixed>
    </define>
    <define name="any">
        <element>
            <anyName>
                <except>
                    <nsName/>
                </except>
            </anyName>
            <ref name="anycontents"/>
        </element>
    </define>
</grammar>
