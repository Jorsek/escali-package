<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="20" packageVersion="1" saxonVersion="9.7.0.14" timeStamp="2017-02-14T08:19:54.773+01:00" target="JS">
 <co id="0" binds="">
  <function name="Q{http://www.escali.schematron-quickfix.com/}string-join" line="258" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" eval="9" flags="pU" as="item()*" slots="3">
   <arg name="seq" as="item()*"/>
   <arg name="sep" as="xs:string"/>
   <let role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="261" var="res" as="xs:untypedAtomic" slot="2" eval="7">
    <cast line="262" as="xs:untypedAtomic" emptiable="0">
     <fn name="string-join">
      <data>
       <forEach>
        <varRef name="seq" slot="0"/>
        <sequence line="263">
         <valueOf>
          <fn name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <data>
             <dot/>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </valueOf>
         <choose line="264">
          <isLast test="0"/>
          <valueOf line="265">
           <varRef name="sep" slot="1"/>
          </valueOf>
         </choose>
        </sequence>
       </forEach>
      </data>
      <str val=""/>
     </fn>
    </cast>
    <valueOf line="269">
     <convert from="xs:untypedAtomic" to="xs:string">
      <varRef name="res" slot="2"/>
     </convert>
    </valueOf>
   </let>
  </function>
 </co>
 <co id="1" binds="">
  <template name="Q{http://www.escali.schematron-quickfix.com/}makeElementXPath" flags="os" line="189" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" slots="5">
   <sequence role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="190">
    <param name="axis" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="191" name="type" slot="1">
     <doc role="select" base="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" flags="t" text="*" validation="preserve">
      <valueOf flags="S">
       <str val="*"/>
      </valueOf>
     </doc>
     <supplied role="conversion" slot="1"/>
    </param>
    <let line="192" var="name" as="xs:string" slot="2" eval="8">
     <fn name="name">
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||name">
       <dot flags="a"/>
      </treat>
     </fn>
     <let line="193" var="local-name" as="xs:string" slot="3" eval="8">
      <fn name="local-name">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||local-name">
        <dot flags="a"/>
       </treat>
      </fn>
      <let line="194" var="ns-uri" as="xs:anyURI" slot="4" eval="8">
       <fn name="namespace-uri">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||namespace-uri">
         <dot flags="a"/>
        </treat>
       </fn>
       <sequence line="197">
        <valueOf flags="S">
         <str val="/"/>
        </valueOf>
        <choose>
         <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="type" slot="1"/>
          </data>
          <str val="*"/>
         </gcEE>
         <sequence line="198">
          <valueOf>
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="axis" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <valueOf flags="S">
           <str val="*:"/>
          </valueOf>
          <valueOf line="200">
           <fn name="local-name">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||local-name">
             <dot flags="a"/>
            </treat>
           </fn>
          </valueOf>
          <valueOf flags="S">
           <str val="[namespace-uri()='"/>
          </valueOf>
          <valueOf line="202">
           <convert from="xs:anyURI" to="xs:string">
            <fn name="namespace-uri">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||namespace-uri">
              <dot flags="a"/>
             </treat>
            </fn>
           </convert>
          </valueOf>
          <valueOf flags="S">
           <str val="']"/>
          </valueOf>
         </sequence>
         <gcEE line="205" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="type" slot="1"/>
          </data>
          <str val="processing-instruction()"/>
         </gcEE>
         <sequence line="207">
          <valueOf flags="S">
           <str val="processing-instruction()[local-name()='"/>
          </valueOf>
          <valueOf>
           <fn name="local-name">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||local-name">
             <dot flags="a"/>
            </treat>
           </fn>
          </valueOf>
          <valueOf flags="S">
           <str val="']"/>
          </valueOf>
         </sequence>
         <gcEE line="212" op="=" card="M:N" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="type" slot="1"/>
          </data>
          <literal count="2">
           <str val="comment()"/>
           <str val="text()"/>
          </literal>
         </gcEE>
         <valueOf line="213">
          <fn name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <data>
             <mergeAdj>
              <varRef name="type" slot="1"/>
             </mergeAdj>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </valueOf>
        </choose>
        <valueOf flags="S">
         <str val="["/>
        </valueOf>
        <choose line="226">
         <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="type" slot="1"/>
          </data>
          <str val="text()"/>
         </gcEE>
         <valueOf line="227">
          <convert from="xs:integer" to="xs:string">
           <arith op="+" calc="i+i">
            <fn name="count">
             <slash simple="1">
              <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|11|XPTY0020|">
               <dot flags="a"/>
              </treat>
              <axis name="preceding-sibling" nodeTest="text()" jsTest="return item.nodeType==3;"/>
             </slash>
            </fn>
            <int val="1"/>
           </arith>
          </convert>
         </valueOf>
         <gcEE line="229" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="type" slot="1"/>
          </data>
          <str val="comment()"/>
         </gcEE>
         <valueOf line="230">
          <convert from="xs:integer" to="xs:string">
           <arith op="+" calc="i+i">
            <fn name="count">
             <slash simple="1">
              <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|11|XPTY0020|">
               <dot flags="a"/>
              </treat>
              <axis name="preceding-sibling" nodeTest="comment()" jsTest="return item.nodeType==8;"/>
             </slash>
            </fn>
            <int val="1"/>
           </arith>
          </convert>
         </valueOf>
         <gcEE line="232" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="type" slot="1"/>
          </data>
          <str val="processing-instruction()"/>
         </gcEE>
         <valueOf line="233">
          <convert from="xs:integer" to="xs:string">
           <arith op="+" calc="i+i">
            <fn name="count">
             <filter flags="b">
              <slash simple="1">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|11|XPTY0020|">
                <dot flags="a"/>
               </treat>
               <axis name="preceding-sibling" nodeTest="processing-instruction()" jsTest="return item.nodeType==7&amp;&amp;item.target!='xml';"/>
              </slash>
              <vc op="eq" comp="CCC">
               <fn name="local-name">
                <dot type="processing-instruction()"/>
               </fn>
               <varRef name="local-name" slot="3"/>
              </vc>
             </filter>
            </fn>
            <int val="1"/>
           </arith>
          </convert>
         </valueOf>
         <true/>
         <valueOf line="236">
          <convert from="xs:integer" to="xs:string">
           <arith op="+" calc="i+i">
            <fn name="count">
             <filter flags="b">
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|11|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="preceding-sibling" nodeTest="element()" jsTest="return item.nodeType==1;"/>
               </slash>
               <vc op="eq" comp="CCC">
                <fn name="local-name">
                 <dot type="element()"/>
                </fn>
                <varRef name="local-name" slot="3"/>
               </vc>
              </filter>
              <vc op="eq" comp="CCC">
               <fn name="namespace-uri">
                <dot type="element()"/>
               </fn>
               <varRef name="ns-uri" slot="4"/>
              </vc>
             </filter>
            </fn>
            <int val="1"/>
           </arith>
          </convert>
         </valueOf>
        </choose>
        <valueOf flags="S">
         <str val="]"/>
        </valueOf>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="2" binds="2">
  <function name="Q{http://www.escali.schematron-quickfix.com/}getRefPhases" line="109" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" eval="3" flags="pU" as="node()*" slots="3">
   <arg name="phase" as="element(Q{http://purl.oclc.org/dsdl/schematron}phase)*"/>
   <let role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="117" var="newPhases" as="node()*" slot="1" eval="3">
    <except op="except">
     <docOrder intra="0">
      <for line="116" var="ph" as="element(Q{http://purl.oclc.org/dsdl/schematron}phase)" slot="2">
       <varRef role="in" name="phase" slot="0"/>
       <fn role="return" name="key">
        <str val="nodeById"/>
        <data>
         <slash>
          <slash simple="1">
           <varRef name="ph" slot="2"/>
           <axis name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}phase)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='phase';"/>
          </slash>
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name=='ref'"/>
         </slash>
        </data>
        <check card="1" diag="0|2||key">
         <fn name="root">
          <varRef name="ph" slot="2"/>
         </fn>
        </check>
       </fn>
      </for>
     </docOrder>
     <docOrder intra="0">
      <varRef name="phase" slot="0"/>
     </docOrder>
    </except>
    <sequence line="127">
     <varRef name="phase" slot="0"/>
     <varRef name="newPhases" slot="1"/>
     <choose line="123">
      <fn name="exists">
       <varRef name="newPhases" slot="1"/>
      </fn>
      <except op="except">
       <docOrder intra="0">
        <ufCall name="Q{http://www.escali.schematron-quickfix.com/}getRefPhases" tailCall="false" bSlot="0" eval="4">
         <treat as="element(Q{http://purl.oclc.org/dsdl/schematron}phase)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='phase';" diag="0|0||es:getRefPhases">
          <union op="|">
           <docOrder intra="0">
            <varRef name="newPhases" slot="1"/>
           </docOrder>
           <docOrder intra="0">
            <varRef name="phase" slot="0"/>
           </docOrder>
          </union>
         </treat>
        </ufCall>
       </docOrder>
       <docOrder intra="0">
        <sequence>
         <varRef name="newPhases" slot="1"/>
         <varRef name="phase" slot="0"/>
        </sequence>
       </docOrder>
      </except>
     </choose>
    </sequence>
   </let>
  </function>
 </co>
 <co id="3" binds="4 4 5 5 6 7 8">
  <mode name="Q{}schemaInfo" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="24" flags="os" line="65" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11);"/>
    <let role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="66" var="includes" as="((element(Q{http://purl.oclc.org/dsdl/schematron}include) | element(Q{http://www.escali.schematron-quickfix.com/}import)) | element(Q{http://www.w3.org/1999/XSL/Transform}include))*" slot="12" eval="3">
     <slash>
      <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
      <axis name="child" nodeTest="((element(Q{http://purl.oclc.org/dsdl/schematron}include) | element(Q{http://www.escali.schematron-quickfix.com/}import)) | element(Q{http://www.w3.org/1999/XSL/Transform}include))" jsTest="function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';};return a()||b();"/>
     </slash>
     <let line="67" var="includes2" as="element(Q{http://www.escali.schematron-quickfix.com/}includes)" slot="13" eval="7">
      <treat line="69" as="element(Q{http://www.escali.schematron-quickfix.com/}includes)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='includes';" diag="3|0|XTTE0570|includes2">
       <elem xmlns:es="http://www.escali.schematron-quickfix.com/" name="es:includes" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
        <applyT mode="Q{http://www.escali.schematron-quickfix.com/}meta" bSlot="0">
         <varRef role="select" name="includes" slot="12"/>
        </applyT>
       </elem>
      </treat>
      <let line="72" var="schema-uri" as="xs:anyURI?" slot="14" eval="8">
       <fn name="document-uri">
        <dot type="document-node()"/>
       </fn>
       <let line="79" var="patterns" as="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)*" slot="15" eval="3">
        <let var="vv:loc321411226" as="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)*" slot="16" eval="3">
         <axis name="descendant" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='pattern';"/>
         <for var="u" as="item()" slot="17">
          <filter role="in" flags="b">
           <sequence line="75">
            <varRef name="schema-uri" slot="14"/>
            <slash>
             <slash simple="1">
              <varRef name="includes2" slot="13"/>
              <axis name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='include';"/>
             </slash>
             <axis name="attribute" nodeTest="attribute(Q{}uri)" jsTest="return item.name=='uri'"/>
            </slash>
           </sequence>
           <fn name="doc-available">
            <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||doc-available">
             <check card="?" diag="0|0||doc-available">
              <cvUntyped to="xs:string">
               <data>
                <dot/>
               </data>
              </cvUntyped>
             </check>
            </treat>
           </fn>
          </filter>
          <union role="return" op="|">
           <slash simple="1">
            <fn name="doc">
             <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||doc">
              <check card="?" diag="0|0||doc">
               <cvUntyped to="xs:string">
                <data>
                 <varRef name="u" slot="17"/>
                </data>
               </cvUntyped>
              </check>
             </treat>
            </fn>
            <axis name="descendant" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='pattern';"/>
           </slash>
           <varRef name="vv:loc321411226" slot="16"/>
          </union>
         </for>
        </let>
        <elem xmlns:es="http://www.escali.schematron-quickfix.com/" line="83" name="es:schemaInfo" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
         <sequence>
          <elem name="es:meta">
           <elem name="es:schema">
            <sequence>
             <att name="uri">
              <convert from="xs:anyURI" to="xs:string">
               <varRef name="schema-uri" slot="14"/>
              </convert>
             </att>
             <choose line="84">
              <fn name="exists">
               <varRef name="includes" slot="12"/>
              </fn>
              <elem line="86" name="es:includes" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
               <applyT mode="Q{http://www.escali.schematron-quickfix.com/}meta" bSlot="1">
                <varRef role="select" name="includes" slot="12"/>
               </applyT>
              </elem>
             </choose>
            </sequence>
           </elem>
          </elem>
          <elem line="96" name="es:phases" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
           <let var="defaultPhase" as="item()*" slot="18" eval="3">
            <choose>
             <fn name="exists">
              <slash>
               <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
               <axis name="attribute" nodeTest="attribute(Q{}defaultPhase)" jsTest="return item.name=='defaultPhase'"/>
              </slash>
             </fn>
             <slash>
              <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
              <axis name="attribute" nodeTest="attribute(Q{}defaultPhase)" jsTest="return item.name=='defaultPhase'"/>
             </slash>
             <true/>
             <str val="#ALL"/>
            </choose>
            <sequence line="97">
             <att name="default">
              <fn name="string-join">
               <convert from="xs:anyAtomicType" to="xs:string">
                <data>
                 <mergeAdj>
                  <varRef name="defaultPhase" slot="18"/>
                 </mergeAdj>
                </data>
               </convert>
               <str val=" "/>
              </fn>
             </att>
             <let line="98" var="phases" as="element(Q{http://www.escali.schematron-quickfix.com/}phase)+" slot="19" eval="3">
              <treat line="99" as="element(Q{http://www.escali.schematron-quickfix.com/}phase)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='phase';" diag="3|0|XTTE0570|phases">
               <sequence>
                <elem name="es:phase" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
                 <sequence>
                  <att name="id">
                   <str val="#ALL"/>
                  </att>
                  <att line="104" name="patterns">
                   <fn name="string-join">
                    <convert from="xs:anyAtomicType" to="xs:string">
                     <data>
                      <mergeAdj>
                       <homCheck>
                        <slash>
                         <filter flags="b">
                          <varRef name="patterns" slot="15"/>
                          <ufCall name="Q{http://www.escali.schematron-quickfix.com/}isActive" tailCall="false" bSlot="2" eval="7 0">
                           <dot type="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)"/>
                           <str val="#ALL"/>
                          </ufCall>
                         </filter>
                         <choose>
                          <fn name="exists">
                           <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                          </fn>
                          <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                          <true/>
                          <fn name="generate-id">
                           <dot type="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)"/>
                          </fn>
                         </choose>
                        </slash>
                       </homCheck>
                      </mergeAdj>
                     </data>
                    </convert>
                    <str val=" "/>
                   </fn>
                  </att>
                 </sequence>
                </elem>
                <forEach line="106">
                 <slash>
                  <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
                  <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}phase)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='phase';"/>
                 </slash>
                 <let line="107" var="id" as="attribute(Q{}id)?" slot="20" eval="8">
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                  <elem line="108" name="es:phase" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
                   <sequence>
                    <att name="id">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <data>
                       <varRef name="id" slot="20"/>
                      </data>
                     </convert>
                    </att>
                    <att line="113" name="patterns">
                     <fn name="string-join">
                      <convert from="xs:anyAtomicType" to="xs:string">
                       <data>
                        <mergeAdj>
                         <homCheck>
                          <slash>
                           <let var="vv:loc228755518" as="xs:string+" slot="21" eval="3">
                            <check card="+" diag="0|1||es:isActive">
                             <cvUntyped to="xs:string">
                              <data>
                               <varRef name="id" slot="20"/>
                              </data>
                             </cvUntyped>
                            </check>
                            <filter flags="b">
                             <varRef name="patterns" slot="15"/>
                             <ufCall name="Q{http://www.escali.schematron-quickfix.com/}isActive" tailCall="false" bSlot="3" eval="7 4">
                              <dot type="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)"/>
                              <varRef name="vv:loc228755518" slot="21"/>
                             </ufCall>
                            </filter>
                           </let>
                           <choose>
                            <fn name="exists">
                             <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                            </fn>
                            <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                            <true/>
                            <fn name="generate-id">
                             <dot type="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)"/>
                            </fn>
                           </choose>
                          </slash>
                         </homCheck>
                        </mergeAdj>
                       </data>
                      </convert>
                      <str val=" "/>
                     </fn>
                    </att>
                   </sequence>
                  </elem>
                 </let>
                </forEach>
                <applyT line="116" mode="Q{}phases" bSlot="4">
                 <slash role="select">
                  <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
                  <axis name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
                 </slash>
                 <withParam name="patterns" flags="t" as="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)*">
                  <varRef line="117" name="patterns" slot="15"/>
                 </withParam>
                </applyT>
               </sequence>
              </treat>
              <let line="120" var="vv:loc1617655184" as="xs:anyAtomicType*" indexable="true" slot="22" eval="3">
               <data line="128">
                <varRef name="defaultPhase" slot="18"/>
               </data>
               <forEach>
                <sort>
                 <varRef role="select" name="phases" slot="19"/>
                 <sortKey line="125" comp="NC">
                  <choose role="select">
                   <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                    <data>
                     <varRef name="defaultPhase" slot="18"/>
                    </data>
                    <data>
                     <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                    </data>
                   </gcEE>
                   <int val="0"/>
                   <true/>
                   <int val="1"/>
                  </choose>
                  <str role="order" val="ascending"/>
                  <str role="dataType" val="number"/>
                  <str role="lang" val=""/>
                  <str role="caseOrder" val="#default"/>
                  <str role="stable" val="yes"/>
                  <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
                 </sortKey>
                </sort>
                <copy line="127" flags="cin">
                 <sequence role="content">
                  <copyOf flags="vsc">
                   <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
                  </copyOf>
                  <choose line="128">
                   <indexedLookup line="120" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                    <varRef name="vv:loc1617655184" slot="22"/>
                    <data line="128">
                     <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                    </data>
                   </indexedLookup>
                   <att line="129" name="isDefault">
                    <str val="true"/>
                   </att>
                  </choose>
                  <copyOf line="131" flags="vsc">
                   <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
                  </copyOf>
                 </sequence>
                </copy>
               </forEach>
              </let>
             </let>
            </sequence>
           </let>
          </elem>
          <elem line="137" name="es:languages" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
           <let var="langs" as="element(Q{http://www.escali.schematron-quickfix.com/}lang)*" slot="23" eval="3">
            <treat line="138" as="element(Q{http://www.escali.schematron-quickfix.com/}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='lang';" diag="3|0|XTTE0570|langs">
             <sequence>
              <forEachGroup algorithm="by">
               <fn role="select" name="key">
                <str val="xmlLangNodes"/>
                <str val="xml-lang"/>
               </fn>
               <ufCall role="key" name="Q{http://www.escali.schematron-quickfix.com/}getLang" tailCall="false" bSlot="5" eval="7">
                <dot type="node()"/>
               </ufCall>
               <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
               <elem role="content" line="139" name="es:lang" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
                <att name="code">
                 <fn name="string-join">
                  <convert from="xs:anyAtomicType" to="xs:string">
                   <currentGroupingKey/>
                  </convert>
                  <str val=" "/>
                 </fn>
                </att>
               </elem>
              </forEachGroup>
              <choose line="141">
               <fn name="exists">
                <varRef name="includes2" slot="13"/>
               </fn>
               <applyT line="142" mode="Q{}lang" bSlot="6">
                <varRef role="select" name="includes2" slot="13"/>
               </applyT>
              </choose>
             </sequence>
            </treat>
            <sequence line="155">
             <att name="default">
              <fn name="string-join">
               <convert from="xs:anyAtomicType" to="xs:string">
                <data>
                 <mergeAdj>
                  <choose line="154">
                   <compareToInt op="eq" val="1">
                    <fn name="count">
                     <fn name="subsequence">
                      <varRef name="langs" slot="23"/>
                      <int val="1"/>
                      <int val="2"/>
                     </fn>
                    </fn>
                   </compareToInt>
                   <conditionalSort>
                    <fn name="exists">
                     <tail start="2">
                      <varRef name="langs" slot="23"/>
                     </tail>
                    </fn>
                    <docOrder intra="0">
                     <slash>
                      <varRef name="langs" slot="23"/>
                      <axis name="attribute" nodeTest="attribute(Q{}code)" jsTest="return item.name=='code'"/>
                     </slash>
                    </docOrder>
                   </conditionalSort>
                   <fn name="exists">
                    <slash>
                     <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
                     <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='lang';"/>
                    </slash>
                   </fn>
                   <slash>
                    <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
                    <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='lang';"/>
                   </slash>
                   <true/>
                   <str val="#ALL"/>
                  </choose>
                 </mergeAdj>
                </data>
               </convert>
               <str val=" "/>
              </fn>
             </att>
             <elem line="156" name="es:lang" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
              <att name="code">
               <str val="#ALL"/>
              </att>
             </elem>
             <copyOf line="157" flags="vsc">
              <varRef name="langs" slot="23"/>
             </copyOf>
            </sequence>
           </let>
          </elem>
         </sequence>
        </elem>
       </let>
      </let>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="9" binds="">
  <globalVariable name="Q{}namespace" type="document-node()" line="306" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" visibility="PRIVATE" jsAcceptor="function test(item) {return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11);};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c(n) {return n==1;};">
   <doc vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="307" base="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" validation="preserve">
    <forEach>
     <slash>
      <slash simple="1">
       <root/>
       <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
      </slash>
      <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}ns)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='ns';"/>
     </slash>
     <elem xmlns:es="http://www.escali.schematron-quickfix.com/" line="308" name="es:ns" namespaces="es=http://www.escali.schematron-quickfix.com/">
      <sequence>
       <att name="pre">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}prefix)" jsTest="return item.name=='prefix'"/>
         </data>
        </convert>
       </att>
       <att name="uri">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}uri)" jsTest="return item.name=='uri'"/>
         </data>
        </convert>
       </att>
       <att name="schemaDefined">
        <str val="true"/>
       </att>
      </sequence>
     </elem>
    </forEach>
   </doc>
  </globalVariable>
 </co>
 <co id="10" binds="11 11">
  <mode name="Q{http://www.escali.schematron-quickfix.com/}selectValue" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="10.0" seq="0" rank="1" minImp="0" slots="0" flags="os" line="287" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11);"/>
    <applyT role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="288" flags="ti" bSlot="0">
     <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="0" flags="os" line="291" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl">
    <p.nodeTest role="match" test="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
    <applyT role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="292" flags="t" bSlot="1">
     <dot role="select" type="( element() | text() | comment() | processing-instruction() )"/>
    </applyT>
   </templateRule>
  </mode>
 </co>
 <co id="12" binds="0">
  <function name="Q{http://www.escali.schematron-quickfix.com/}quoteRegex" line="242" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" eval="7" flags="pU" as="xs:string" slots="1">
   <arg name="regex" as="xs:string"/>
   <treat role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="255" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|es:quoteRegex">
    <check card="1" diag="5|0|XTTE0780|es:quoteRegex">
     <cvUntyped to="xs:string">
      <data>
       <ufCall name="Q{http://www.escali.schematron-quickfix.com/}string-join" tailCall="false" bSlot="0" eval="4 0">
        <cvUntyped line="245" to="xs:string">
         <data>
          <analyzeString>
           <varRef role="select" name="regex" slot="0"/>
           <str role="regex" val="[-\[\]()*+?.,\\^$|#]"/>
           <str role="flags" val=""/>
           <sequence role="matching" line="248">
            <valueOf flags="S">
             <str val="\"/>
            </valueOf>
            <valueOf>
             <dot type="xs:string"/>
            </valueOf>
           </sequence>
           <valueOf role="nonMatching" line="251">
            <dot type="xs:string"/>
           </valueOf>
          </analyzeString>
         </data>
        </cvUntyped>
        <str val=""/>
       </ufCall>
      </data>
     </cvUntyped>
    </check>
   </treat>
  </function>
 </co>
 <co id="13" binds="14 1 1 1">
  <function name="Q{http://www.escali.schematron-quickfix.com/}getNodePath" line="161" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" eval="9" flags="pU" as="item()*" slots="3">
   <arg name="node" as="item()*"/>
   <let role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="163" var="ancestor" as="document-node()" slot="1" eval="7">
    <doc line="164" base="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" validation="preserve">
     <forEach>
      <except op="except">
       <conditionalSort>
        <fn name="exists">
         <tail start="2">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
           <varRef name="node" slot="0"/>
          </treat>
         </tail>
        </fn>
        <docOrder intra="0">
         <slash>
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
           <varRef name="node" slot="0"/>
          </treat>
          <fn name="reverse">
           <axis name="ancestor-or-self" nodeTest="node()" jsTest="return SaxonJS.U.isNode(item);"/>
          </fn>
         </slash>
        </docOrder>
       </conditionalSort>
       <fn name="root">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||root">
         <check card="?" diag="0|0||root">
          <varRef name="node" slot="0"/>
         </check>
        </treat>
       </fn>
      </except>
      <let line="165" var="type" as="xs:string" slot="2" eval="7">
       <ufCall name="Q{http://www.escali.schematron-quickfix.com/}getNodeType" tailCall="false" bSlot="0" eval="7">
        <dot type="node()"/>
       </ufCall>
       <choose line="167">
        <vc op="eq" onEmpty="0" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
         <varRef name="type" slot="2"/>
         <str val="attribute"/>
        </vc>
        <callT xmlns:es="http://www.escali.schematron-quickfix.com/" line="168" name="es:makeElementXPath" bSlot="1">
         <withParam name="axis" flags="c" as="document-node()">
          <doc line="169" base="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" flags="t" text="@" validation="preserve">
           <valueOf flags="S">
            <str val="@"/>
           </valueOf>
          </doc>
         </withParam>
        </callT>
        <vc line="172" op="eq" onEmpty="0" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
         <varRef name="type" slot="2"/>
         <str val="element"/>
        </vc>
        <callT xmlns:es="http://www.escali.schematron-quickfix.com/" line="173" name="es:makeElementXPath" bSlot="2"/>
        <gcEE line="175" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
         <literal count="3">
          <str val="text"/>
          <str val="comment"/>
          <str val="processing-instruction"/>
         </literal>
         <varRef name="type" slot="2"/>
        </gcEE>
        <callT xmlns:es="http://www.escali.schematron-quickfix.com/" line="176" name="es:makeElementXPath" bSlot="3">
         <withParam name="type" flags="c" as="document-node()">
          <doc line="178" base="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" flags="t" validation="preserve">
           <sequence>
            <valueOf>
             <varRef name="type" slot="2"/>
            </valueOf>
            <valueOf flags="S">
             <str val="()"/>
            </valueOf>
           </sequence>
          </doc>
         </withParam>
        </callT>
       </choose>
      </let>
     </forEach>
    </doc>
    <valueOf line="187">
     <convert from="xs:untypedAtomic" to="xs:string">
      <data>
       <varRef name="ancestor" slot="1"/>
      </data>
     </convert>
    </valueOf>
   </let>
  </function>
 </co>
 <co id="6" binds="5 5">
  <mode name="Q{}phases" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="3" flags="os" line="204" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
     <axis vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="204" name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
    </p.withPredicate>
    <sequence role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="205">
     <param name="patterns" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <let line="206" var="id" as="attribute(Q{}phase)?" slot="1" eval="8">
      <axis name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
      <elem xmlns:es="http://www.escali.schematron-quickfix.com/" line="207" name="es:phase" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
       <sequence>
        <att name="id">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <varRef name="id" slot="1"/>
          </data>
         </convert>
        </att>
        <att line="212" name="patterns">
         <fn name="string-join">
          <convert from="xs:anyAtomicType" to="xs:string">
           <data>
            <mergeAdj>
             <homCheck>
              <slash>
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                <let var="vv:loc17228516" as="xs:string+" slot="2" eval="3">
                 <check card="+" diag="0|1||es:isActive">
                  <cvUntyped to="xs:string">
                   <data>
                    <varRef name="id" slot="1"/>
                   </data>
                  </cvUntyped>
                 </check>
                 <filter flags="b">
                  <varRef name="patterns" slot="0"/>
                  <ufCall name="Q{http://www.escali.schematron-quickfix.com/}isActive" tailCall="false" bSlot="0" eval="7 4">
                   <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||es:isActive">
                    <dot/>
                   </treat>
                   <varRef name="vv:loc17228516" slot="2"/>
                  </ufCall>
                 </filter>
                </let>
               </treat>
               <choose>
                <fn name="exists">
                 <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                </fn>
                <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                <true/>
                <fn name="generate-id">
                 <dot type="node()"/>
                </fn>
               </choose>
              </slash>
             </homCheck>
            </mergeAdj>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </att>
       </sequence>
      </elem>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="4" flags="os" line="188" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
    <sequence role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="189">
     <param name="patterns" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <let line="190" var="import-doc" as="document-node()?" slot="1" eval="8">
      <fn name="doc">
       <fn name="resolve-uri">
        <cvUntyped to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}href)" jsTest="return item.name=='href'"/>
         </data>
        </cvUntyped>
        <check card="1" diag="0|1||resolve-uri">
         <fn name="document-uri">
          <root/>
         </fn>
        </check>
       </fn>
      </fn>
      <sequence line="191">
       <forEach>
        <slash>
         <slash simple="1">
          <varRef name="import-doc" slot="1"/>
          <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
         </slash>
         <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}phase)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='phase';"/>
        </slash>
        <let line="192" var="id" as="attribute(Q{}id)?" slot="2" eval="8">
         <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
         <elem xmlns:es="http://www.escali.schematron-quickfix.com/" line="193" name="es:phase" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
          <sequence>
           <att name="id">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <varRef name="id" slot="2"/>
             </data>
            </convert>
           </att>
           <att line="198" name="patterns">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <homCheck>
                 <slash>
                  <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                   <let var="vv:loc1354472673" as="xs:string+" slot="3" eval="3">
                    <check card="+" diag="0|1||es:isActive">
                     <cvUntyped to="xs:string">
                      <data>
                       <varRef name="id" slot="2"/>
                      </data>
                     </cvUntyped>
                    </check>
                    <filter flags="b">
                     <varRef name="patterns" slot="0"/>
                     <ufCall name="Q{http://www.escali.schematron-quickfix.com/}isActive" tailCall="false" bSlot="1" eval="7 4">
                      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||es:isActive">
                       <dot/>
                      </treat>
                      <varRef name="vv:loc1354472673" slot="3"/>
                     </ufCall>
                    </filter>
                   </let>
                  </treat>
                  <choose>
                   <fn name="exists">
                    <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                   </fn>
                   <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                   <true/>
                   <fn name="generate-id">
                    <dot type="node()"/>
                   </fn>
                  </choose>
                 </slash>
                </homCheck>
               </mergeAdj>
              </data>
             </convert>
             <str val=" "/>
            </fn>
           </att>
          </sequence>
         </elem>
        </let>
       </forEach>
       <applyT line="201" flags="ct" bSlot="0">
        <slash role="select">
         <slash simple="1">
          <varRef name="import-doc" slot="1"/>
          <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
         </slash>
         <axis name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
        </slash>
       </applyT>
      </sequence>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="8" binds="7">
  <mode name="Q{}lang" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="1" flags="os" line="216" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
    <let role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="217" var="import-doc" as="document-node()?" slot="0" eval="8">
     <fn name="doc">
      <fn name="resolve-uri">
       <cvUntyped to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}href)" jsTest="return item.name=='href'"/>
        </data>
       </cvUntyped>
       <check card="1" diag="0|1||resolve-uri">
        <fn name="document-uri">
         <root/>
        </fn>
       </check>
      </fn>
     </fn>
     <sequence line="218">
      <forEachGroup algorithm="by">
       <fn role="select" name="key">
        <str val="xmlLangNodes"/>
        <str val="xml-lang"/>
        <check card="1" diag="0|2||key">
         <varRef name="import-doc" slot="0"/>
        </check>
       </fn>
       <ufCall role="key" name="Q{http://www.escali.schematron-quickfix.com/}getLang" tailCall="false" bSlot="0" eval="7">
        <dot type="node()"/>
       </ufCall>
       <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
       <elem xmlns:es="http://www.escali.schematron-quickfix.com/" role="content" line="219" name="es:lang" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
        <att name="code">
         <fn name="string-join">
          <convert from="xs:anyAtomicType" to="xs:string">
           <currentGroupingKey/>
          </convert>
          <str val=" "/>
         </fn>
        </att>
       </elem>
      </forEachGroup>
      <applyT line="221" flags="ct" bSlot="0">
       <slash role="select">
        <slash simple="1">
         <varRef name="import-doc" slot="0"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
        </slash>
        <axis name="child" nodeTest="((element(Q{http://purl.oclc.org/dsdl/schematron}include) | element(Q{http://www.escali.schematron-quickfix.com/}import)) | element(Q{http://www.w3.org/1999/XSL/Transform}include))" jsTest="function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';};return a()||b();"/>
       </slash>
      </applyT>
     </sequence>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="1" flags="os" line="216" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl">
    <p.nodeTest role="match" test="element(Q{http://purl.oclc.org/dsdl/schematron}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';"/>
    <let role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="217" var="import-doc" as="document-node()?" slot="0" eval="8">
     <fn name="doc">
      <fn name="resolve-uri">
       <cvUntyped to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}href)" jsTest="return item.name=='href'"/>
        </data>
       </cvUntyped>
       <check card="1" diag="0|1||resolve-uri">
        <fn name="document-uri">
         <root/>
        </fn>
       </check>
      </fn>
     </fn>
     <sequence line="218">
      <forEachGroup algorithm="by">
       <fn role="select" name="key">
        <str val="xmlLangNodes"/>
        <str val="xml-lang"/>
        <check card="1" diag="0|2||key">
         <varRef name="import-doc" slot="0"/>
        </check>
       </fn>
       <ufCall role="key" name="Q{http://www.escali.schematron-quickfix.com/}getLang" tailCall="false" bSlot="0" eval="7">
        <dot type="node()"/>
       </ufCall>
       <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
       <elem xmlns:es="http://www.escali.schematron-quickfix.com/" role="content" line="219" name="es:lang" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
        <att name="code">
         <fn name="string-join">
          <convert from="xs:anyAtomicType" to="xs:string">
           <currentGroupingKey/>
          </convert>
          <str val=" "/>
         </fn>
        </att>
       </elem>
      </forEachGroup>
      <applyT line="221" flags="ct" bSlot="0">
       <slash role="select">
        <slash simple="1">
         <varRef name="import-doc" slot="0"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
        </slash>
        <axis name="child" nodeTest="((element(Q{http://purl.oclc.org/dsdl/schematron}include) | element(Q{http://www.escali.schematron-quickfix.com/}import)) | element(Q{http://www.w3.org/1999/XSL/Transform}include))" jsTest="function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';};return a()||b();"/>
       </slash>
      </applyT>
     </sequence>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="1" flags="os" line="216" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/1999/XSL/Transform}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';"/>
    <let role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="217" var="import-doc" as="document-node()?" slot="0" eval="8">
     <fn name="doc">
      <fn name="resolve-uri">
       <cvUntyped to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}href)" jsTest="return item.name=='href'"/>
        </data>
       </cvUntyped>
       <check card="1" diag="0|1||resolve-uri">
        <fn name="document-uri">
         <root/>
        </fn>
       </check>
      </fn>
     </fn>
     <sequence line="218">
      <forEachGroup algorithm="by">
       <fn role="select" name="key">
        <str val="xmlLangNodes"/>
        <str val="xml-lang"/>
        <check card="1" diag="0|2||key">
         <varRef name="import-doc" slot="0"/>
        </check>
       </fn>
       <ufCall role="key" name="Q{http://www.escali.schematron-quickfix.com/}getLang" tailCall="false" bSlot="0" eval="7">
        <dot type="node()"/>
       </ufCall>
       <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
       <elem xmlns:es="http://www.escali.schematron-quickfix.com/" role="content" line="219" name="es:lang" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
        <att name="code">
         <fn name="string-join">
          <convert from="xs:anyAtomicType" to="xs:string">
           <currentGroupingKey/>
          </convert>
          <str val=" "/>
         </fn>
        </att>
       </elem>
      </forEachGroup>
      <applyT line="221" flags="ct" bSlot="0">
       <slash role="select">
        <slash simple="1">
         <varRef name="import-doc" slot="0"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
        </slash>
        <axis name="child" nodeTest="((element(Q{http://purl.oclc.org/dsdl/schematron}include) | element(Q{http://www.escali.schematron-quickfix.com/}import)) | element(Q{http://www.w3.org/1999/XSL/Transform}include))" jsTest="function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';};return a()||b();"/>
       </slash>
      </applyT>
     </sequence>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="4" binds="">
  <mode name="Q{http://www.escali.schematron-quickfix.com/}meta" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="1" flags="os" line="162" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
    <let role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="163" var="abs-uri" as="xs:anyURI?" slot="0" eval="8">
     <fn name="resolve-uri">
      <cvUntyped to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}href)" jsTest="return item.name=='href'"/>
       </data>
      </cvUntyped>
      <check card="1" diag="0|1||resolve-uri">
       <fn name="document-uri">
        <root/>
       </fn>
      </check>
     </fn>
     <elem xmlns:es="http://www.escali.schematron-quickfix.com/" line="165" name="es:include" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
      <sequence>
       <att name="uri">
        <convert from="xs:anyURI" to="xs:string">
         <varRef name="abs-uri" slot="0"/>
        </convert>
       </att>
       <att line="179" name="type">
        <choose>
         <fn name="exists">
          <axis name="self" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';"/>
         </fn>
         <str val="iso-schematron"/>
         <fn name="exists">
          <axis name="self" nodeTest="element(Q{http://www.w3.org/1999/XSL/Transform}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';"/>
         </fn>
         <str val="xsl"/>
         <fn name="exists">
          <filter flags="b">
           <axis name="self" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
           <fn name="exists">
            <axis name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
           </fn>
          </filter>
         </fn>
         <str val="escali-by-phase"/>
         <true/>
         <str val="escali"/>
        </choose>
       </att>
       <choose line="180">
        <fn name="exists">
         <filter flags="b">
          <axis name="self" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
          </fn>
         </filter>
        </fn>
        <att line="181" name="phase">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
          </data>
         </convert>
        </att>
       </choose>
       <applyT line="184" flags="c" bSlot="0">
        <slash role="select" line="183">
         <slash simple="1">
          <fn name="doc">
           <varRef name="abs-uri" slot="0"/>
          </fn>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         </slash>
         <axis name="child" nodeTest="((element(Q{http://purl.oclc.org/dsdl/schematron}include) | element(Q{http://www.escali.schematron-quickfix.com/}import)) | element(Q{http://www.w3.org/1999/XSL/Transform}include))" jsTest="function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';};return a()||b();"/>
        </slash>
       </applyT>
      </sequence>
     </elem>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="1" flags="os" line="162" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl">
    <p.nodeTest role="match" test="element(Q{http://purl.oclc.org/dsdl/schematron}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';"/>
    <let role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="163" var="abs-uri" as="xs:anyURI?" slot="0" eval="8">
     <fn name="resolve-uri">
      <cvUntyped to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}href)" jsTest="return item.name=='href'"/>
       </data>
      </cvUntyped>
      <check card="1" diag="0|1||resolve-uri">
       <fn name="document-uri">
        <root/>
       </fn>
      </check>
     </fn>
     <elem xmlns:es="http://www.escali.schematron-quickfix.com/" line="165" name="es:include" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
      <sequence>
       <att name="uri">
        <convert from="xs:anyURI" to="xs:string">
         <varRef name="abs-uri" slot="0"/>
        </convert>
       </att>
       <att line="179" name="type">
        <choose>
         <fn name="exists">
          <axis name="self" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';"/>
         </fn>
         <str val="iso-schematron"/>
         <fn name="exists">
          <axis name="self" nodeTest="element(Q{http://www.w3.org/1999/XSL/Transform}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';"/>
         </fn>
         <str val="xsl"/>
         <fn name="exists">
          <filter flags="b">
           <axis name="self" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
           <fn name="exists">
            <axis name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
           </fn>
          </filter>
         </fn>
         <str val="escali-by-phase"/>
         <true/>
         <str val="escali"/>
        </choose>
       </att>
       <choose line="180">
        <fn name="exists">
         <filter flags="b">
          <axis name="self" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
          </fn>
         </filter>
        </fn>
        <att line="181" name="phase">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
          </data>
         </convert>
        </att>
       </choose>
       <applyT line="184" flags="c" bSlot="0">
        <slash role="select" line="183">
         <slash simple="1">
          <fn name="doc">
           <varRef name="abs-uri" slot="0"/>
          </fn>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         </slash>
         <axis name="child" nodeTest="((element(Q{http://purl.oclc.org/dsdl/schematron}include) | element(Q{http://www.escali.schematron-quickfix.com/}import)) | element(Q{http://www.w3.org/1999/XSL/Transform}include))" jsTest="function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';};return a()||b();"/>
        </slash>
       </applyT>
      </sequence>
     </elem>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="1" flags="os" line="162" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/1999/XSL/Transform}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';"/>
    <let role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="163" var="abs-uri" as="xs:anyURI?" slot="0" eval="8">
     <fn name="resolve-uri">
      <cvUntyped to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}href)" jsTest="return item.name=='href'"/>
       </data>
      </cvUntyped>
      <check card="1" diag="0|1||resolve-uri">
       <fn name="document-uri">
        <root/>
       </fn>
      </check>
     </fn>
     <elem xmlns:es="http://www.escali.schematron-quickfix.com/" line="165" name="es:include" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
      <sequence>
       <att name="uri">
        <convert from="xs:anyURI" to="xs:string">
         <varRef name="abs-uri" slot="0"/>
        </convert>
       </att>
       <att line="179" name="type">
        <choose>
         <fn name="exists">
          <axis name="self" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';"/>
         </fn>
         <str val="iso-schematron"/>
         <fn name="exists">
          <axis name="self" nodeTest="element(Q{http://www.w3.org/1999/XSL/Transform}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';"/>
         </fn>
         <str val="xsl"/>
         <fn name="exists">
          <filter flags="b">
           <axis name="self" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
           <fn name="exists">
            <axis name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
           </fn>
          </filter>
         </fn>
         <str val="escali-by-phase"/>
         <true/>
         <str val="escali"/>
        </choose>
       </att>
       <choose line="180">
        <fn name="exists">
         <filter flags="b">
          <axis name="self" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
          </fn>
         </filter>
        </fn>
        <att line="181" name="phase">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}phase)" jsTest="return item.name=='phase'"/>
          </data>
         </convert>
        </att>
       </choose>
       <applyT line="184" flags="c" bSlot="0">
        <slash role="select" line="183">
         <slash simple="1">
          <fn name="doc">
           <varRef name="abs-uri" slot="0"/>
          </fn>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         </slash>
         <axis name="child" nodeTest="((element(Q{http://purl.oclc.org/dsdl/schematron}include) | element(Q{http://www.escali.schematron-quickfix.com/}import)) | element(Q{http://www.w3.org/1999/XSL/Transform}include))" jsTest="function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';};return a()||b();"/>
        </slash>
       </applyT>
      </sequence>
     </elem>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="15" binds="">
  <function name="Q{http://www.escali.schematron-quickfix.com/}getActiveDefault" line="90" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" eval="7" flags="pU" as="xs:boolean" slots="2">
   <arg name="pattern" as="element()"/>
   <arg name="default" as="xs:boolean"/>
   <choose role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="102">
    <gc op="=" card="1:1" comp="CCC">
     <data>
      <slash simple="1">
       <varRef name="pattern" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}abstract)" jsTest="return item.name=='abstract'"/>
      </slash>
     </data>
     <str val="true"/>
    </gc>
    <true/>
    <fn name="exists">
     <filter flags="b">
      <slash simple="1">
       <varRef name="pattern" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{http://www.escali.schematron-quickfix.com/}active)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='active';"/>
      </slash>
      <vc op="ne" comp="CCC">
       <cast as="xs:string" emptiable="0">
        <data>
         <dot type="attribute(Q{http://www.escali.schematron-quickfix.com/}active)"/>
        </data>
       </cast>
       <str val="auto"/>
      </vc>
     </filter>
    </fn>
    <gc op="=" card="1:1" comp="CCC">
     <data>
      <slash simple="1">
       <varRef name="pattern" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{http://www.escali.schematron-quickfix.com/}active)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='active';"/>
      </slash>
     </data>
     <str val="true"/>
    </gc>
    <true/>
    <varRef name="default" slot="1"/>
   </choose>
  </function>
 </co>
 <co id="16" binds="17">
  <template name="Q{}namespace" flags="os" line="312" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" slots="2">
   <sequence role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="313">
    <param name="context" slot="0">
     <dot role="select" flags="a"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <forEachGroup line="323" algorithm="by">
     <slash role="select" line="318" simple="1">
      <doc base="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" validation="preserve">
       <sequence>
        <forEach>
         <conditionalSort>
          <fn name="exists">
           <tail start="2">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
             <varRef name="context" slot="0"/>
            </treat>
           </tail>
          </fn>
          <docOrder intra="0">
           <slash>
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
             <varRef name="context" slot="0"/>
            </treat>
            <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
           </slash>
          </docOrder>
         </conditionalSort>
         <elem xmlns:es="http://www.escali.schematron-quickfix.com/" line="319" name="es:ns" namespaces="es=http://www.escali.schematron-quickfix.com/">
          <sequence>
           <att name="pre">
            <fn name="name">
             <dot type="namespace-node()"/>
            </fn>
           </att>
           <att name="uri">
            <data>
             <dot type="namespace-node()"/>
            </data>
           </att>
          </sequence>
         </elem>
        </forEach>
        <copyOf line="321" flags="vsc">
         <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg443052752" bSlot="0"/>
        </copyOf>
       </sequence>
      </doc>
      <axis line="323" name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}ns)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='ns';"/>
     </slash>
     <data role="key">
      <axis name="attribute" nodeTest="attribute(Q{}pre)" jsTest="return item.name=='pre'"/>
     </data>
     <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
     <let role="content" line="324" var="uri" as="attribute(Q{}uri)?" slot="1" eval="8">
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
        <lastOf>
         <currentGroup/>
        </lastOf>
       </treat>
       <axis name="attribute" nodeTest="attribute(Q{}uri)" jsTest="return item.name=='uri'"/>
      </slash>
      <choose line="325">
       <or op="or">
        <fn name="not">
         <gcEE op="=" card="N:1" comp="CCC">
          <literal count="7">
           <str val="http://www.w3.org/XML/1998/namespace"/>
           <str val="http://purl.oclc.org/dsdl/schematron"/>
           <str val="http://www.schematron-quickfix.com/validator/process"/>
           <str val="http://www.schematron-quickfix.com/svrl/extension"/>
           <str val="http://www.escali.schematron-quickfix.com/"/>
           <str val="http://www.w3.org/1999/XSL/Transform"/>
           <str val="http://www.w3.org/2001/XMLSchema-instance"/>
          </literal>
          <data>
           <varRef name="uri" slot="1"/>
          </data>
         </gcEE>
        </fn>
        <gcEE op="=" card="N:1" comp="CCC">
         <data>
          <slash>
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
            <currentGroup/>
           </treat>
           <axis name="attribute" nodeTest="attribute(Q{}schemaDefined)" jsTest="return item.name=='schemaDefined'"/>
          </slash>
         </data>
         <str val="true"/>
        </gcEE>
       </or>
       <namespace line="326">
        <fn role="name" name="string-join">
         <convert from="xs:anyAtomicType" to="xs:string">
          <currentGroupingKey/>
         </convert>
         <str val=" "/>
        </fn>
        <convert role="select" from="xs:untypedAtomic" to="xs:string">
         <data>
          <varRef name="uri" slot="1"/>
         </data>
        </convert>
       </namespace>
      </choose>
     </let>
    </forEachGroup>
   </sequence>
  </template>
 </co>
 <co id="7" binds="">
  <function name="Q{http://www.escali.schematron-quickfix.com/}getLang" line="52" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" eval="8" flags="pU" as="xs:string" slots="2">
   <arg name="node" as="node()"/>
   <let role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="54" var="lang" as="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)?" slot="1" eval="7">
    <lastOf>
     <slash>
      <slash>
       <varRef name="node" slot="0"/>
       <fn name="reverse">
        <axis name="ancestor-or-self" nodeTest="element()" jsTest="return item.nodeType==1;"/>
       </fn>
      </slash>
      <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='lang';"/>
     </slash>
    </lastOf>
    <cvUntyped line="59" to="xs:string">
     <cast as="xs:untypedAtomic" emptiable="0">
      <fn name="string-join">
       <convert from="xs:anyAtomicType" to="xs:string">
        <choose>
         <fn name="exists">
          <varRef name="lang" slot="1"/>
         </fn>
         <data>
          <varRef name="lang" slot="1"/>
         </data>
         <true/>
         <str val="#NULL"/>
        </choose>
       </convert>
       <str val=" "/>
      </fn>
     </cast>
    </cvUntyped>
   </let>
  </function>
 </co>
 <co id="18" binds="">
  <globalVariable name="Q{}processingNamespaces" type="xs:string+" line="303" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&gt;=1;};">
   <literal count="7">
    <str val="http://www.w3.org/XML/1998/namespace"/>
    <str val="http://purl.oclc.org/dsdl/schematron"/>
    <str val="http://www.schematron-quickfix.com/validator/process"/>
    <str val="http://www.schematron-quickfix.com/svrl/extension"/>
    <str val="http://www.escali.schematron-quickfix.com/"/>
    <str val="http://www.w3.org/1999/XSL/Transform"/>
    <str val="http://www.w3.org/2001/XMLSchema-instance"/>
   </literal>
  </globalVariable>
 </co>
 <co id="14" binds="">
  <function name="Q{http://www.escali.schematron-quickfix.com/}getNodeType" line="133" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" eval="7" flags="pU" as="xs:string" slots="2">
   <arg name="node" as="node()+"/>
   <let role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="153" var="types" as="xs:anyAtomicType*" slot="1" eval="3">
    <fn name="distinct-values">
     <slash line="152">
      <varRef name="node" slot="0"/>
      <choose>
       <instance of="attribute()" jsTest="return SaxonJS.U.isAttr(item)">
        <dot type="node()"/>
       </instance>
       <str val="attribute"/>
       <instance of="element()" jsTest="return item.nodeType==1;">
        <dot type="node()"/>
       </instance>
       <str val="element"/>
       <instance of="text()" jsTest="return item.nodeType==3;">
        <dot type="node()"/>
       </instance>
       <str val="text"/>
       <instance of="comment()" jsTest="return item.nodeType==8;">
        <dot type="node()"/>
       </instance>
       <str val="comment"/>
       <instance of="processing-instruction()" jsTest="return item.nodeType==7&amp;&amp;item.target!='xml';">
        <dot type="node()"/>
       </instance>
       <str val="processing-instruction"/>
       <true/>
       <str val="UNKNOWN_TYPE"/>
      </choose>
     </slash>
    </fn>
    <choose line="158">
     <fn name="exists">
      <tail start="2">
       <varRef name="types" slot="1"/>
      </tail>
     </fn>
     <str val="mixed"/>
     <true/>
     <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|es:getNodeType">
      <check card="1" diag="5|0|XTTE0780|es:getNodeType">
       <cvUntyped to="xs:string">
        <varRef name="types" slot="1"/>
       </cvUntyped>
      </check>
     </treat>
    </choose>
   </let>
  </function>
 </co>
 <co id="5" binds="2 15 15 15">
  <function name="Q{http://www.escali.schematron-quickfix.com/}isActive" line="64" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" eval="7" flags="pU" as="xs:boolean" slots="4">
   <arg name="pattern" as="node()"/>
   <arg name="phase" as="xs:string+"/>
   <tailCallLoop role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="68">
    <let var="phaseEl" as="node()*" slot="2" eval="3">
     <ufCall name="Q{http://www.escali.schematron-quickfix.com/}getRefPhases" tailCall="false" bSlot="0" eval="4">
      <treat as="element(Q{http://purl.oclc.org/dsdl/schematron}phase)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='phase';" diag="0|0||es:getRefPhases">
       <fn line="67" name="key">
        <str val="nodeById"/>
        <varRef name="phase" slot="1"/>
        <check card="1" diag="0|2||key">
         <fn name="root">
          <varRef name="pattern" slot="0"/>
         </fn>
        </check>
       </fn>
      </treat>
     </ufCall>
     <let line="69" var="callingPhase" as="node()*" slot="3" eval="3">
      <fn name="key">
       <str val="phaseByActivePatternId"/>
       <data>
        <slash simple="1">
         <varRef name="pattern" slot="0"/>
         <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
        </slash>
       </data>
       <check card="1" diag="0|2||key">
        <fn name="root">
         <varRef name="pattern" slot="0"/>
        </fn>
       </check>
      </fn>
      <choose line="72">
       <or op="or">
        <gcEE op="=" card="N:1" comp="CCC">
         <varRef name="phase" slot="1"/>
         <str val="#ALL"/>
        </gcEE>
        <gc op="=" card="1:1" comp="CCC">
         <data>
          <slash simple="1">
           <varRef name="pattern" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}abstract)" jsTest="return item.name=='abstract'"/>
          </slash>
         </data>
         <str val="true"/>
        </gc>
       </or>
       <ufCall line="73" name="Q{http://www.escali.schematron-quickfix.com/}getActiveDefault" tailCall="foreign" bSlot="1" eval="7 0">
        <treat as="element()" jsTest="return item.nodeType==1;" diag="0|0||es:getActiveDefault">
         <varRef name="pattern" slot="0"/>
        </treat>
        <true/>
       </ufCall>
       <gcEE line="75" op="=" card="M:N" comp="CCC">
        <data>
         <slash>
          <fn line="70" name="key">
           <str val="phaseByInactivePatternId"/>
           <data>
            <slash simple="1">
             <varRef name="pattern" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
            </slash>
           </data>
           <check card="1" diag="0|2||key">
            <fn name="root">
             <varRef name="pattern" slot="0"/>
            </fn>
           </check>
          </fn>
          <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
         </slash>
        </data>
        <varRef name="phase" slot="1"/>
       </gcEE>
       <false/>
       <and line="78" op="and">
        <and op="and">
         <fn name="exists">
          <varRef name="phaseEl" slot="2"/>
         </fn>
         <fn name="not">
          <conditionalSort>
           <fn name="exists">
            <tail start="2">
             <varRef name="phaseEl" slot="2"/>
            </tail>
           </fn>
           <docOrder intra="0">
            <slash>
             <varRef name="phaseEl" slot="2"/>
             <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}active)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='active';"/>
            </slash>
           </docOrder>
          </conditionalSort>
         </fn>
        </and>
        <fn name="exists">
         <conditionalSort>
          <fn name="exists">
           <tail start="2">
            <varRef name="phaseEl" slot="2"/>
           </tail>
          </fn>
          <docOrder intra="0">
           <slash>
            <varRef name="phaseEl" slot="2"/>
            <axis name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}inactive)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='inactive';"/>
           </slash>
          </docOrder>
         </conditionalSort>
        </fn>
       </and>
       <ufCall line="79" name="Q{http://www.escali.schematron-quickfix.com/}getActiveDefault" tailCall="foreign" bSlot="2" eval="7 0">
        <treat as="element()" jsTest="return item.nodeType==1;" diag="0|0||es:getActiveDefault">
         <varRef name="pattern" slot="0"/>
        </treat>
        <true/>
       </ufCall>
       <or line="81" op="or">
        <fn name="not">
         <slash simple="1">
          <varRef name="pattern" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
         </slash>
        </fn>
        <fn name="not">
         <varRef name="callingPhase" slot="3"/>
        </fn>
       </or>
       <ufCall line="82" name="Q{http://www.escali.schematron-quickfix.com/}getActiveDefault" tailCall="foreign" bSlot="3" eval="7 0">
        <treat as="element()" jsTest="return item.nodeType==1;" diag="0|0||es:getActiveDefault">
         <varRef name="pattern" slot="0"/>
        </treat>
        <false/>
       </ufCall>
       <true/>
       <gcEE line="85" op="=" card="M:N" comp="CCC">
        <data>
         <slash>
          <varRef name="callingPhase" slot="3"/>
          <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
         </slash>
        </data>
        <varRef name="phase" slot="1"/>
       </gcEE>
      </choose>
     </let>
    </let>
   </tailCallLoop>
  </function>
 </co>
 <co id="17" binds="9">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg443052752" type="element(Q{http://www.escali.schematron-quickfix.com/}ns)*" line="321" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" visibility="PRIVATE" jsAcceptor="function test(item) {var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='ns';};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c() {return true;};">
   <slash vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="321" simple="1">
    <gVarRef name="Q{}namespace" bSlot="0"/>
    <axis name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}ns)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='ns';"/>
   </slash>
  </globalVariable>
 </co>
 <co id="19" binds="">
  <function name="Q{http://www.escali.schematron-quickfix.com/}selectValue" line="272" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" eval="3" flags="pU" as="node()*" slots="1">
   <arg name="select" as="item()*"/>
   <choose role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="275">
    <instance of="node()" jsTest="return SaxonJS.U.isNode(item);">
     <first>
      <varRef name="select" slot="0"/>
     </first>
    </instance>
    <copyOf line="279" flags="vsc">
     <varRef name="select" slot="0"/>
    </copyOf>
    <true/>
    <valueOf line="282">
     <fn name="string-join">
      <convert from="xs:anyAtomicType" to="xs:string">
       <data>
        <mergeAdj>
         <varRef name="select" slot="0"/>
        </mergeAdj>
       </data>
      </convert>
      <str val=" "/>
     </fn>
    </valueOf>
   </choose>
  </function>
 </co>
 <co id="20" binds="">
  <function name="Q{http://www.escali.schematron-quickfix.com/}getRegexPosition" line="332" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" eval="7" flags="pU" as="item()*" slots="5">
   <arg name="context" as="item()*"/>
   <arg name="regex" as="item()*"/>
   <arg name="regexFlags" as="item()*"/>
   <arg name="position" as="item()*"/>
   <arith role="body" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="353" op="+" calc="i+i">
    <fn line="352" name="sum">
     <slash>
      <docOrder line="351" intra="1">
       <slash>
        <let var="vv:loc802198765" as="xs:anyAtomicType*" slot="4" eval="3">
         <data>
          <varRef name="position" slot="3"/>
         </data>
         <slash line="338">
          <doc base="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" validation="preserve">
           <analyzeString>
            <treat role="select" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="4|0||analyze-string/select">
             <check card="1" diag="4|0||analyze-string/select">
              <cvUntyped to="xs:string">
               <data>
                <varRef name="context" slot="0"/>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <fn role="regex" name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <varRef name="regex" slot="1"/>
               </mergeAdj>
              </data>
             </convert>
             <str val=" "/>
            </fn>
            <fn role="flags" name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <varRef name="regexFlags" slot="2"/>
               </mergeAdj>
              </data>
             </convert>
             <str val=" "/>
            </fn>
            <elem xmlns:es="http://www.escali.schematron-quickfix.com/" role="matching" line="340" name="es:span" namespaces="es=http://www.escali.schematron-quickfix.com/">
             <sequence>
              <att name="pos">
               <convert from="xs:integer" to="xs:string">
                <fn name="position"/>
               </convert>
              </att>
              <valueOf line="341">
               <dot type="xs:string"/>
              </valueOf>
             </sequence>
            </elem>
            <elem xmlns:es="http://www.escali.schematron-quickfix.com/" role="nonMatching" line="345" name="es:span" namespaces="es=http://www.escali.schematron-quickfix.com/">
             <sequence>
              <att name="pos">
               <convert from="xs:integer" to="xs:string">
                <fn name="position"/>
               </convert>
              </att>
              <valueOf line="346">
               <dot type="xs:string"/>
              </valueOf>
             </sequence>
            </elem>
           </analyzeString>
          </doc>
          <fn line="351" name="key">
           <str val="Q{http://saxon.sf.net/}kk105"/>
           <varRef name="vv:loc802198765" slot="4"/>
           <dot type="document-node()"/>
          </fn>
         </slash>
        </let>
        <axis name="preceding-sibling" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='span';"/>
       </slash>
      </docOrder>
      <fn name="string-length">
       <fn name="string">
        <dot type="element(Q{http://www.escali.schematron-quickfix.com/}span)"/>
       </fn>
      </fn>
     </slash>
    </fn>
    <int val="1"/>
   </arith>
  </function>
 </co>
 <co id="11" binds="4 4 5 5 6 7 8">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="24" flags="os" line="65" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11);"/>
    <let role="action" vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron sqf=http://www.schematron-quickfix.com/validator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="66" var="includes" as="((element(Q{http://purl.oclc.org/dsdl/schematron}include) | element(Q{http://www.escali.schematron-quickfix.com/}import)) | element(Q{http://www.w3.org/1999/XSL/Transform}include))*" slot="0" eval="3">
     <slash>
      <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
      <axis name="child" nodeTest="((element(Q{http://purl.oclc.org/dsdl/schematron}include) | element(Q{http://www.escali.schematron-quickfix.com/}import)) | element(Q{http://www.w3.org/1999/XSL/Transform}include))" jsTest="function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='include';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/1999/XSL/Transform'&amp;&amp;q.local=='include';};return a()||b();"/>
     </slash>
     <let line="67" var="includes2" as="element(Q{http://www.escali.schematron-quickfix.com/}includes)" slot="1" eval="7">
      <treat line="69" as="element(Q{http://www.escali.schematron-quickfix.com/}includes)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='includes';" diag="3|0|XTTE0570|includes2">
       <elem xmlns:es="http://www.escali.schematron-quickfix.com/" name="es:includes" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
        <applyT mode="Q{http://www.escali.schematron-quickfix.com/}meta" bSlot="0">
         <varRef role="select" name="includes" slot="0"/>
        </applyT>
       </elem>
      </treat>
      <let line="72" var="schema-uri" as="xs:anyURI?" slot="2" eval="8">
       <fn name="document-uri">
        <dot type="document-node()"/>
       </fn>
       <let line="79" var="patterns" as="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)*" slot="3" eval="3">
        <let var="vv:loc971308551" as="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)*" slot="4" eval="3">
         <axis name="descendant" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='pattern';"/>
         <for var="u" as="item()" slot="5">
          <filter role="in" flags="b">
           <sequence line="75">
            <varRef name="schema-uri" slot="2"/>
            <slash>
             <slash simple="1">
              <varRef name="includes2" slot="1"/>
              <axis name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}include)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='include';"/>
             </slash>
             <axis name="attribute" nodeTest="attribute(Q{}uri)" jsTest="return item.name=='uri'"/>
            </slash>
           </sequence>
           <fn name="doc-available">
            <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||doc-available">
             <check card="?" diag="0|0||doc-available">
              <cvUntyped to="xs:string">
               <data>
                <dot/>
               </data>
              </cvUntyped>
             </check>
            </treat>
           </fn>
          </filter>
          <union role="return" op="|">
           <slash simple="1">
            <fn name="doc">
             <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||doc">
              <check card="?" diag="0|0||doc">
               <cvUntyped to="xs:string">
                <data>
                 <varRef name="u" slot="5"/>
                </data>
               </cvUntyped>
              </check>
             </treat>
            </fn>
            <axis name="descendant" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='pattern';"/>
           </slash>
           <varRef name="vv:loc971308551" slot="4"/>
          </union>
         </for>
        </let>
        <elem xmlns:es="http://www.escali.schematron-quickfix.com/" line="83" name="es:schemaInfo" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
         <sequence>
          <elem name="es:meta">
           <elem name="es:schema">
            <sequence>
             <att name="uri">
              <convert from="xs:anyURI" to="xs:string">
               <varRef name="schema-uri" slot="2"/>
              </convert>
             </att>
             <choose line="84">
              <fn name="exists">
               <varRef name="includes" slot="0"/>
              </fn>
              <elem line="86" name="es:includes" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
               <applyT mode="Q{http://www.escali.schematron-quickfix.com/}meta" bSlot="1">
                <varRef role="select" name="includes" slot="0"/>
               </applyT>
              </elem>
             </choose>
            </sequence>
           </elem>
          </elem>
          <elem line="96" name="es:phases" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
           <let var="defaultPhase" as="item()*" slot="6" eval="3">
            <choose>
             <fn name="exists">
              <slash>
               <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
               <axis name="attribute" nodeTest="attribute(Q{}defaultPhase)" jsTest="return item.name=='defaultPhase'"/>
              </slash>
             </fn>
             <slash>
              <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
              <axis name="attribute" nodeTest="attribute(Q{}defaultPhase)" jsTest="return item.name=='defaultPhase'"/>
             </slash>
             <true/>
             <str val="#ALL"/>
            </choose>
            <sequence line="97">
             <att name="default">
              <fn name="string-join">
               <convert from="xs:anyAtomicType" to="xs:string">
                <data>
                 <mergeAdj>
                  <varRef name="defaultPhase" slot="6"/>
                 </mergeAdj>
                </data>
               </convert>
               <str val=" "/>
              </fn>
             </att>
             <let line="98" var="phases" as="element(Q{http://www.escali.schematron-quickfix.com/}phase)+" slot="7" eval="3">
              <treat line="99" as="element(Q{http://www.escali.schematron-quickfix.com/}phase)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='phase';" diag="3|0|XTTE0570|phases">
               <sequence>
                <elem name="es:phase" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
                 <sequence>
                  <att name="id">
                   <str val="#ALL"/>
                  </att>
                  <att line="104" name="patterns">
                   <fn name="string-join">
                    <convert from="xs:anyAtomicType" to="xs:string">
                     <data>
                      <mergeAdj>
                       <homCheck>
                        <slash>
                         <filter flags="b">
                          <varRef name="patterns" slot="3"/>
                          <ufCall name="Q{http://www.escali.schematron-quickfix.com/}isActive" tailCall="false" bSlot="2" eval="7 0">
                           <dot type="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)"/>
                           <str val="#ALL"/>
                          </ufCall>
                         </filter>
                         <choose>
                          <fn name="exists">
                           <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                          </fn>
                          <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                          <true/>
                          <fn name="generate-id">
                           <dot type="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)"/>
                          </fn>
                         </choose>
                        </slash>
                       </homCheck>
                      </mergeAdj>
                     </data>
                    </convert>
                    <str val=" "/>
                   </fn>
                  </att>
                 </sequence>
                </elem>
                <forEach line="106">
                 <slash>
                  <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
                  <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}phase)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='phase';"/>
                 </slash>
                 <let line="107" var="id" as="attribute(Q{}id)?" slot="8" eval="8">
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                  <elem line="108" name="es:phase" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
                   <sequence>
                    <att name="id">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <data>
                       <varRef name="id" slot="8"/>
                      </data>
                     </convert>
                    </att>
                    <att line="113" name="patterns">
                     <fn name="string-join">
                      <convert from="xs:anyAtomicType" to="xs:string">
                       <data>
                        <mergeAdj>
                         <homCheck>
                          <slash>
                           <let var="vv:loc2145540306" as="xs:string+" slot="9" eval="3">
                            <check card="+" diag="0|1||es:isActive">
                             <cvUntyped to="xs:string">
                              <data>
                               <varRef name="id" slot="8"/>
                              </data>
                             </cvUntyped>
                            </check>
                            <filter flags="b">
                             <varRef name="patterns" slot="3"/>
                             <ufCall name="Q{http://www.escali.schematron-quickfix.com/}isActive" tailCall="false" bSlot="3" eval="7 4">
                              <dot type="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)"/>
                              <varRef name="vv:loc2145540306" slot="9"/>
                             </ufCall>
                            </filter>
                           </let>
                           <choose>
                            <fn name="exists">
                             <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                            </fn>
                            <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                            <true/>
                            <fn name="generate-id">
                             <dot type="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)"/>
                            </fn>
                           </choose>
                          </slash>
                         </homCheck>
                        </mergeAdj>
                       </data>
                      </convert>
                      <str val=" "/>
                     </fn>
                    </att>
                   </sequence>
                  </elem>
                 </let>
                </forEach>
                <applyT line="116" mode="Q{}phases" bSlot="4">
                 <slash role="select">
                  <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
                  <axis name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}import)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='import';"/>
                 </slash>
                 <withParam name="patterns" flags="t" as="element(Q{http://purl.oclc.org/dsdl/schematron}pattern)*">
                  <varRef line="117" name="patterns" slot="3"/>
                 </withParam>
                </applyT>
               </sequence>
              </treat>
              <let line="120" var="vv:loc1242516985" as="xs:anyAtomicType*" indexable="true" slot="10" eval="3">
               <data line="128">
                <varRef name="defaultPhase" slot="6"/>
               </data>
               <forEach>
                <sort>
                 <varRef role="select" name="phases" slot="7"/>
                 <sortKey line="125" comp="NC">
                  <choose role="select">
                   <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                    <data>
                     <varRef name="defaultPhase" slot="6"/>
                    </data>
                    <data>
                     <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                    </data>
                   </gcEE>
                   <int val="0"/>
                   <true/>
                   <int val="1"/>
                  </choose>
                  <str role="order" val="ascending"/>
                  <str role="dataType" val="number"/>
                  <str role="lang" val=""/>
                  <str role="caseOrder" val="#default"/>
                  <str role="stable" val="yes"/>
                  <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
                 </sortKey>
                </sort>
                <copy line="127" flags="cin">
                 <sequence role="content">
                  <copyOf flags="vsc">
                   <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
                  </copyOf>
                  <choose line="128">
                   <indexedLookup line="120" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                    <varRef name="vv:loc1242516985" slot="10"/>
                    <data line="128">
                     <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
                    </data>
                   </indexedLookup>
                   <att line="129" name="isDefault">
                    <str val="true"/>
                   </att>
                  </choose>
                  <copyOf line="131" flags="vsc">
                   <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
                  </copyOf>
                 </sequence>
                </copy>
               </forEach>
              </let>
             </let>
            </sequence>
           </let>
          </elem>
          <elem line="137" name="es:languages" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
           <let var="langs" as="element(Q{http://www.escali.schematron-quickfix.com/}lang)*" slot="11" eval="3">
            <treat line="138" as="element(Q{http://www.escali.schematron-quickfix.com/}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='lang';" diag="3|0|XTTE0570|langs">
             <sequence>
              <forEachGroup algorithm="by">
               <fn role="select" name="key">
                <str val="xmlLangNodes"/>
                <str val="xml-lang"/>
               </fn>
               <ufCall role="key" name="Q{http://www.escali.schematron-quickfix.com/}getLang" tailCall="false" bSlot="5" eval="7">
                <dot type="node()"/>
               </ufCall>
               <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
               <elem role="content" line="139" name="es:lang" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
                <att name="code">
                 <fn name="string-join">
                  <convert from="xs:anyAtomicType" to="xs:string">
                   <currentGroupingKey/>
                  </convert>
                  <str val=" "/>
                 </fn>
                </att>
               </elem>
              </forEachGroup>
              <choose line="141">
               <fn name="exists">
                <varRef name="includes2" slot="1"/>
               </fn>
               <applyT line="142" mode="Q{}lang" bSlot="6">
                <varRef role="select" name="includes2" slot="1"/>
               </applyT>
              </choose>
             </sequence>
            </treat>
            <sequence line="155">
             <att name="default">
              <fn name="string-join">
               <convert from="xs:anyAtomicType" to="xs:string">
                <data>
                 <mergeAdj>
                  <choose line="154">
                   <compareToInt op="eq" val="1">
                    <fn name="count">
                     <fn name="subsequence">
                      <varRef name="langs" slot="11"/>
                      <int val="1"/>
                      <int val="2"/>
                     </fn>
                    </fn>
                   </compareToInt>
                   <conditionalSort>
                    <fn name="exists">
                     <tail start="2">
                      <varRef name="langs" slot="11"/>
                     </tail>
                    </fn>
                    <docOrder intra="0">
                     <slash>
                      <varRef name="langs" slot="11"/>
                      <axis name="attribute" nodeTest="attribute(Q{}code)" jsTest="return item.name=='code'"/>
                     </slash>
                    </docOrder>
                   </conditionalSort>
                   <fn name="exists">
                    <slash>
                     <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
                     <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='lang';"/>
                    </slash>
                   </fn>
                   <slash>
                    <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}schema)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='schema';"/>
                    <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='lang';"/>
                   </slash>
                   <true/>
                   <str val="#ALL"/>
                  </choose>
                 </mergeAdj>
                </data>
               </convert>
               <str val=" "/>
              </fn>
             </att>
             <elem line="156" name="es:lang" namespaces="es=http://www.escali.schematron-quickfix.com/ sch=http://purl.oclc.org/dsdl/schematron">
              <att name="code">
               <str val="#ALL"/>
              </att>
             </elem>
             <copyOf line="157" flags="vsc">
              <varRef name="langs" slot="11"/>
             </copyOf>
            </sequence>
           </let>
          </elem>
         </sequence>
        </elem>
       </let>
      </let>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name="Q{}phaseByInactivePatternId" line="49" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" binds="2">
  <p.nodeTest test="element(Q{http://purl.oclc.org/dsdl/schematron}phase)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='phase';"/>
  <data vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="49">
   <slash>
    <docOrder intra="0">
     <slash>
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
       <ufCall name="Q{http://www.escali.schematron-quickfix.com/}getRefPhases" tailCall="false" bSlot="0">
        <dot type="element(Q{http://purl.oclc.org/dsdl/schematron}phase)"/>
       </ufCall>
      </treat>
      <axis name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}inactive)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='inactive';"/>
     </slash>
    </docOrder>
    <axis name="attribute" nodeTest="attribute(Q{}pattern)" jsTest="return item.name=='pattern'"/>
   </slash>
  </data>
 </key>
 <key name="Q{http://saxon.sf.net/}kk105" line="0" binds="">
  <p.nodeSet>
   <axis vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="351" name="child" nodeTest="element(Q{http://www.escali.schematron-quickfix.com/}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.escali.schematron-quickfix.com/'&amp;&amp;q.local=='span';"/>
  </p.nodeSet>
  <data vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="351">
   <axis name="attribute" nodeTest="attribute(Q{}pos)" jsTest="return item.name=='pos'"/>
  </data>
 </key>
 <key name="Q{}xmlLangNodes" line="62" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_getSchemaInfo.xsl" binds="">
  <p.venn op="union">
   <p.venn op="union">
    <p.venn op="union">
     <p.venn op="union">
      <p.nodeTest test="element(Q{http://purl.oclc.org/dsdl/schematron}diagnostic)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='diagnostic';"/>
      <p.withUpper axis="parent" upFirst="false">
       <p.nodeTest test="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
       <p.nodeTest test="element(Q{http://purl.oclc.org/dsdl/schematron}assert)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='assert';"/>
      </p.withUpper>
     </p.venn>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
      <p.nodeTest test="element(Q{http://purl.oclc.org/dsdl/schematron}report)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='report';"/>
     </p.withUpper>
    </p.venn>
    <p.nodeTest test="element(Q{http://purl.oclc.org/dsdl/schematron}p)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='p';"/>
   </p.venn>
   <p.nodeTest test="element(Q{http://www.schematron-quickfix.com/validator/process}p)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://www.schematron-quickfix.com/validator/process'&amp;&amp;q.local=='p';"/>
  </p.venn>
  <str val="xml-lang"/>
 </key>
 <key name="Q{}nodeById" line="51" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" binds="">
  <p.withPredicate>
   <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
   <sequence vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="51">
    <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
    <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';"/>
   </sequence>
  </p.withPredicate>
  <data vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="51">
   <axis name="attribute" nodeTest="(attribute(Q{}id) | attribute(Q{http://www.w3.org/XML/1998/namespace}id))" jsTest="function a() {return item.name=='id'};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local=='id';};return a()||b();"/>
  </data>
 </key>
 <key name="Q{}phaseByActivePatternId" line="48" module="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" binds="2">
  <p.nodeTest test="element(Q{http://purl.oclc.org/dsdl/schematron}phase)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='phase';"/>
  <data vn="20" baseUri="file:/D:/nico/Work/Java/net.sqf.escali/xml/xsl/01_compiler/escali_compiler_0_functions.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform sch=http://purl.oclc.org/dsdl/schematron xsm=http://www.schematron-quickfix.com/manipulator/process xs=http://www.w3.org/2001/XMLSchema xd=http://www.oxygenxml.com/ns/doc/xsl es=http://www.escali.schematron-quickfix.com/" line="48">
   <slash>
    <docOrder intra="0">
     <slash>
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
       <ufCall name="Q{http://www.escali.schematron-quickfix.com/}getRefPhases" tailCall="false" bSlot="0">
        <dot type="element(Q{http://purl.oclc.org/dsdl/schematron}phase)"/>
       </ufCall>
      </treat>
      <axis name="child" nodeTest="element(Q{http://purl.oclc.org/dsdl/schematron}active)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://purl.oclc.org/dsdl/schematron'&amp;&amp;q.local=='active';"/>
     </slash>
    </docOrder>
    <axis name="attribute" nodeTest="attribute(Q{}pattern)" jsTest="return item.name=='pattern'"/>
   </slash>
  </data>
 </key>
 <output>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="20"/>
 </output>
 <decimalFormat decimal-separator="46" grouping-separator="44" digit="35" minus-sign="45" percent="37" per-mille="8240" zero-digit="48" exponent-separator="101" pattern-separator="59" infinity="Infinity" NaN="NaN"/>
</package>
<?Σ d45ffbf5?>
